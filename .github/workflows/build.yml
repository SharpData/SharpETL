name: Run build on PR comment

on:
  issue_comment:
    types:
      - created

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/build' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - scalaVersion: 2.11
            sparkVersion: 2.3.2
            scalaCompt: 2.11.12
          - scalaVersion: 2.11
            sparkVersion: 2.4.8
            scalaCompt: 2.11.12
#          - scalaVersion: 2.12
#            sparkVersion: 2.4.8
#            scalaCompt: 2.12.15
#          - scalaVersion: 2.12
#            sparkVersion: 3.0.3
#            scalaCompt: 2.12.15
          - scalaVersion: 2.12
            sparkVersion: 3.1.2
            scalaCompt: 2.12.15
#          - scalaVersion: 2.12
#            sparkVersion: 3.2.0
#            scalaCompt: 2.12.15
          - scalaVersion: 2.13
            sparkVersion: 3.2.0
            scalaCompt: 2.13.7
#          - scalaVersion: 2.12
#            sparkVersion: 3.3.0
#            scalaCompt: 2.12.15
          - scalaVersion: 2.13
            sparkVersion: 3.3.0
            scalaCompt: 2.13.7
    steps:
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha

      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.sha.outputs.result }}

      - name: React to comment
        uses: actions/github-script@v4
        with:
          script: |
            const {owner, repo} = context.issue;
            github.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: "rocket",
            });

      - name: setup test container reuse
        run: |
          echo 'testcontainers.reuse.enable=true' >> ~/.testcontainers.properties

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches--PscalaVersion=${{ matrix.scalaVersion }} -PsparkVersion=${{ matrix.sparkVersion }} -PscalaCompt=${{ matrix.scalaCompt }}-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Style Check
        run: ./gradlew scalastyleMainCheck -PscalaVersion=${{ matrix.scalaVersion }} -PsparkVersion=${{ matrix.sparkVersion }} -PscalaCompt=${{ matrix.scalaCompt }}

      - name: Test
        run: ./gradlew test aggregateScoverage -PscalaVersion=${{ matrix.scalaVersion }} -PsparkVersion=${{ matrix.sparkVersion }} -PscalaCompt=${{ matrix.scalaCompt }}

      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          directory: ./build/reports/scoverage/
          verbose: true

      - name: Message success
        if: ${{ success() }}
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '-PscalaVersion=${{ matrix.scalaVersion }} -PsparkVersion=${{ matrix.sparkVersion }} -PscalaCompt=${{ matrix.scalaCompt }} build succeeded! ✅',
            });
      - name: Message failure
        if: ${{ failure() }}
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '-PscalaVersion=${{ matrix.scalaVersion }} -PsparkVersion=${{ matrix.sparkVersion }} -PscalaCompt=${{ matrix.scalaCompt }} build failed! ❌',
            });