"use strict";(self.webpackChunksharp_etl_site=self.webpackChunksharp_etl_site||[]).push([[166],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,k=d["".concat(u,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(k,a(a({ref:t},p),{},{components:n})):r.createElement(k,a({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={title:"Developer Setup",sidebar_position:4,keywords:["ide","developer","setup"],toc:!0,last_modified_at:new Date("2019-12-30T19:59:57.000Z")},a=void 0,l={unversionedId:"developer-setup",id:"developer-setup",title:"Developer Setup",description:"Pre-requisites",source:"@site/contribute/developer-setup.md",sourceDirName:".",slug:"/developer-setup",permalink:"/SharpETL/cn/contribute/developer-setup",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Developer Setup",sidebar_position:4,keywords:["ide","developer","setup"],toc:!0,last_modified_at:"2019-12-30T19:59:57.000Z"},sidebar:"contribute"},u={},s=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"IDE Setup",id:"ide-setup",level:2},{value:"Contributing Code",id:"contributing-code",level:3},{value:"Coding guidelines",id:"coding-guidelines",level:3},{value:"Code &amp; Project Structure",id:"code--project-structure",level:2},{value:"Code WalkThrough",id:"code-walkthrough",level:2},{value:"Docker Setup",id:"docker-setup",level:2},{value:"Website",id:"website",level:2}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,i.kt)("p",null,"To contribute code, you need"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a GitHub account"),(0,i.kt)("li",{parentName:"ul"},"a Linux (or) macOS development environment with Java JDK 8 installed"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker")," installed for running demo, integ tests or building website"),(0,i.kt)("li",{parentName:"ul"},"docker compose")),(0,i.kt)("h2",{id:"ide-setup"},"IDE Setup"),(0,i.kt)("p",null,"To contribute, you would need to do the following"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"IntelliJ"),(0,i.kt)("li",{parentName:"ul"},"Scala plugin ")),(0,i.kt)("h3",{id:"contributing-code"},"Contributing Code"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Once you finalize on a project/task, please open a new GitHub issue or assign an existing one to yourself. ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Almost all PRs should be linked to a GitHub issue. It's always good to have a GitHub issue upfront to avoid duplicating efforts."),(0,i.kt)("li",{parentName:"ul"},"But, you may be asked to file a GitHub issue, if reviewer deems it necessary"))),(0,i.kt)("li",{parentName:"ul"},"Before you begin work,",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Claim the GitHub issue using the process above and assign the GitHub issue to yourself."),(0,i.kt)("li",{parentName:"ul"},'Click "Start Progress" on the GitHub issue, which tells everyone that you are working on the issue actively.'))),(0,i.kt)("li",{parentName:"ul"},"Make your code change",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Get existing tests to pass using ",(0,i.kt)("inlineCode",{parentName:"li"},"./gradlew clean test")),(0,i.kt)("li",{parentName:"ul"},"Add adequate tests for your new functionality"),(0,i.kt)("li",{parentName:"ul"},"For involved changes, it's best to test the changes in real production environments and report the results in the PR."),(0,i.kt)("li",{parentName:"ul"},"For website changes, please build the site locally & test navigation, formatting & links thoroughly"),(0,i.kt)("li",{parentName:"ul"},"If your code change changes some aspect of documentation (e.g new config, default value change),\nplease ensure there is another PR to ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/SharpData/SharpETL/tree/doc/README.md"},"update the docs")," as well."))),(0,i.kt)("li",{parentName:"ul"},"Sending a Pull Request",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Please ensure your commit message body is descriptive of the change. Bulleted summary would be appreciated."),(0,i.kt)("li",{parentName:"ul"},"Address code review comments & keep pushing changes to your fork/branch, which automatically updates the PR"),(0,i.kt)("li",{parentName:"ul"},"Before your change can be merged, it should be squashed into a single commit for cleaner commit history."))),(0,i.kt)("li",{parentName:"ul"},"Finally, once your pull request is merged, make sure to close issue.")),(0,i.kt)("h3",{id:"coding-guidelines"},"Coding guidelines"),(0,i.kt)("p",null,'Our code can benefit from contributors speaking the same "language" when authoring code. After all, it gets read a lot more than it gets\nwritten. So optimizing for "reads" is a good goal. The list below is a set of guidelines, that contributors strive to upkeep and reflective\nof how we want to evolve our code in the future.'),(0,i.kt)("h2",{id:"code--project-structure"},"Code & Project Structure"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"common")," : most common case classes"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"core")," : core mudules, like ",(0,i.kt)("inlineCode",{parentName:"li"},"JobInterpreter"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"JobParser")," etc."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"datasource")," : Generic datasource API"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"docker")," : Docker containers used by demo and integration tests. Brings up a mini data ecosystem locally"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"flink")," : Implementation for the Flink engine"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"spark")," : Implementation for the Spark engine")),(0,i.kt)("h2",{id:"code-walkthrough"},"Code WalkThrough"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/next/quick-start-guide"},"This Quick start")," will give you a start."),(0,i.kt)("h2",{id:"docker-setup"},"Docker Setup"),(0,i.kt)("p",null,"We encourage you to test your code on docker cluster please follow this for ","[docker setup TODO: not completed]","."),(0,i.kt)("h2",{id:"website"},"Website"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://sharpdata.github.io/SharpETL/docs/next/quick-start-guide/"},"Sharp ETL site")," is hosted on a special ",(0,i.kt)("inlineCode",{parentName:"p"},"doc")," branch. Please follow the ",(0,i.kt)("inlineCode",{parentName:"p"},"README")," file under ",(0,i.kt)("inlineCode",{parentName:"p"},"docs")," on that branch for\ninstructions on making changes to the website."))}c.isMDXComponent=!0}}]);