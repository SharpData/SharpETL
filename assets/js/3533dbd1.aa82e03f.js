"use strict";(self.webpackChunksharp_etl_site=self.webpackChunksharp_etl_site||[]).push([[104],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(a),c=n,f=m["".concat(s,".").concat(c)]||m[c]||u[c]||l;return a?r.createElement(f,o(o({ref:t},d),{},{components:a})):r.createElement(f,o({ref:t},d))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>o});var r=a(7294),n=a(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(l,o),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>c});var r=a(7462),n=a(7294),l=a(6010),o=a(2389),i=a(7392),s=a(7094),p=a(2466);const d="tabList__CuJ",u="tabItem_LNqP";function m(e){var t,a;const{lazy:o,block:m,defaultValue:c,values:f,groupId:k,className:g}=e,_=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=f?f:_.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),b=(0,i.l)(h,((e,t)=>e.value===t.value));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const N=null===c?c:null!=(t=null!=c?c:null==(a=_.find((e=>e.props.default)))?void 0:a.props.value)?t:_[0].props.value;if(null!==N&&!h.some((e=>e.value===N)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+h.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:v,setTabGroupChoices:y}=(0,s.U)(),[T,S]=(0,n.useState)(N),w=[],{blockElementScrollPositionUntilNextRender:E}=(0,p.o5)();if(null!=k){const e=v[k];null!=e&&e!==T&&h.some((t=>t.value===e))&&S(e)}const A=e=>{const t=e.currentTarget,a=w.indexOf(t),r=h[a].value;r!==T&&(E(t),S(r),null!=k&&y(k,String(r)))},O=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var r;const t=w.indexOf(e.currentTarget)+1;a=null!=(r=w[t])?r:w[0];break}case"ArrowLeft":{var n;const t=w.indexOf(e.currentTarget)-1;a=null!=(n=w[t])?n:w[w.length-1];break}}null==(t=a)||t.focus()};return n.createElement("div",{className:(0,l.Z)("tabs-container",d)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":m},g)},h.map((e=>{let{value:t,label:a,attributes:o}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>w.push(e),onKeyDown:O,onFocus:A,onClick:A},o,{className:(0,l.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":T===t})}),null!=a?a:t)}))),o?(0,n.cloneElement)(_.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},_.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function c(e){const t=(0,o.Z)();return n.createElement(m,(0,r.Z)({key:String(t)},e))}},8595:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var r=a(7462),n=(a(7294),a(3905)),l=a(5488),o=a(5162);const i={title:"Quick Start Guide",sidebar_position:2,toc:!0,last_modified_at:new Date("2021-10-21T14:59:57.000Z")},s=void 0,p={unversionedId:"quick-start-guide",id:"quick-start-guide",title:"Quick Start Guide",description:"This guide provides a quick peek to Sharp ETL's capabilities.",source:"@site/docs/quick-start-guide.md",sourceDirName:".",slug:"/quick-start-guide",permalink:"/SharpETL/docs/quick-start-guide",draft:!1,editUrl:"https://github.com/SharpData/SharpETL/tree/pages/website/docs/quick-start-guide.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Quick Start Guide",sidebar_position:2,toc:!0,last_modified_at:"2021-10-21T14:59:57.000Z"},sidebar:"docs",next:{title:"Docker setup",permalink:"/SharpETL/docs/docker-setup"}},d={},u=[{value:"Setup",id:"setup",level:2},{value:"Generate sql files from excel config",id:"generate-sql-files-from-excel-config",level:2},{value:"Create ODS table",id:"create-ods-table",level:2},{value:"Insert data",id:"insert-data",level:2},{value:"Before run job",id:"before-run-job",level:2},{value:"Run the job",id:"run-the-job",level:2},{value:"Query job result",id:"query-job-result",level:2}],m={toc:u};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This guide provides a quick peek to Sharp ETL's capabilities.\nFor a video guide, please check:"),(0,n.kt)("iframe",{src:"https://drive.google.com/file/d/1xaugrGkmzVPtJOzbTKObZCIvZfzyjgzj/preview",width:"640",height:"480",allow:"autoplay"}),(0,n.kt)("h2",{id:"setup"},"Setup"),(0,n.kt)("p",null,"Sharp ETL works well with Spark-2.3+ & Spark-3.2.+ versions. You can follow the instructions ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/SharpData/SharpETL/blob/master/.github/workflows/build.yml#L15-L19"},"here")," for supported spark version."),(0,n.kt)(l.Z,{defaultValue:"bash",values:[{label:"bash",value:"bash"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"bash",mdxType:"TabItem"},(0,n.kt)("p",null,"Build from source for your spark version:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"//for spark 3.1 with scala 2.12\n./gradlew buildJars -PscalaVersion=2.12 -PsparkVersion=3.1.2 -PscalaCompt=2.12.15\n  \n//for spark 2.4 with scala 2.12\n./gradlew buildJars -PscalaVersion=2.12 -PsparkVersion=2.4.8 -PscalaCompt=2.12.15\n  \n//for spark 2.4 with scala 2.11\n./gradlew buildJars -PscalaVersion=2.11 -PsparkVersion=2.4.8 -PscalaCompt=2.11.12\n")))),(0,n.kt)("admonition",{title:"Please note the following",type:"note"},(0,n.kt)("ul",null,(0,n.kt)("li",null,"Spark only support JDK 1.8 before spark version 3.x"),(0,n.kt)("li",null,"Starting from spark version 3.x, JDK 11 support added, but ",(0,n.kt)("a",{href:"https://issues.apache.org/jira/browse/SPARK-35557"},"support of JDK 17 is still missing")),(0,n.kt)("li",null,"For different versions of hive support, please follow ",(0,n.kt)("a",{href:"https://spark.apache.org/docs/latest/sql-data-sources-hive-tables.html#interacting-with-different-versions-of-hive-metastore"},"Interacting with Different Versions of Hive Metastore")))),(0,n.kt)("p",null,"Start a postgres instance"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --name postgres -e POSTGRES_PASSWORD=postgres -d -p 5432:5432 postgres:12.0-alpine\n")),(0,n.kt)("p",null,"Start a ETL db instance"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --name mysql8 -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=sharp_etl mysql:8.0\n")),(0,n.kt)("p",null,"Suppose we have a table named ",(0,n.kt)("inlineCode",{parentName:"p"},"online_order")," in postgres with schema ",(0,n.kt)("inlineCode",{parentName:"p"},"sales"),":"),(0,n.kt)(l.Z,{defaultValue:"sql",values:[{label:"SQL",value:"sql"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"sql",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},'-- This extension provides a function to generate a version 4 UUID, we must enable the extension first.\nCREATE EXTENSION IF NOT EXISTS "pgcrypto";\ncreate schema sales;\ncreate table sales.online_order\n(\n    order_no           varchar(64) default gen_random_uuid() not null\n        primary key,\n    user_id            varchar(32)                           not null,\n    user_name          varchar(32)                           not null,\n    order_total_amount numeric,\n    actual_amount      numeric,\n    post_amount        numeric,\n    order_pay_amount   numeric,\n    total_discount     numeric,\n    pay_type           varchar(32),\n    source_type        varchar(32),\n    order_status       varchar(32),\n    note               varchar(32),\n    confirm_status     varchar(32),\n    payment_time       timestamp,\n    delivery_time      timestamp,\n    receive_time       timestamp,\n    comment_time       timestamp,\n    delivery_company   varchar(32),\n    delivery_code      varchar(32),\n    business_date      date        default CURRENT_DATE,\n    return_flag        varchar(32),\n    created_at         timestamp   default CURRENT_TIMESTAMP,\n    updated_at         timestamp   default CURRENT_TIMESTAMP,\n    deleted_at         timestamp\n);\n')))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"We can download ",(0,n.kt)("a",{parentName:"strong",href:"https://docs.google.com/spreadsheets/d/1k4U2QgZyknJLfpJvVxASsiOcX2nIHX0tx_rUKAINLTY/edit#gid=0"},"this excel")," to your ",(0,n.kt)("inlineCode",{parentName:"strong"},"~/Desktop")," for the quick start guide.")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"You can also use the existing ",(0,n.kt)("a",{parentName:"p",href:"https://docs.google.com/spreadsheets/d/1eRgSHWKDaRufvPJLp9QhcnWiVKzRegQ6PeZocvAgHEo/edit#gid=0"},"excel template")," for your new cases.")),(0,n.kt)("h2",{id:"generate-sql-files-from-excel-config"},"Generate sql files from excel config"),(0,n.kt)(l.Z,{defaultValue:"bash",values:[{label:"bash",value:"bash"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"bash",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'./gradlew :spark:run --args="generate-ods-sql -f ~/Desktop/sharp-etl-Quick-Start-Guide.xlsx --output ~/Desktop/"\n')))),(0,n.kt)("p",null,"And you can see a new file generated at ",(0,n.kt)("inlineCode",{parentName:"p"},"~/Desktop/sales.online_order.sql")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},'-- workflow=ods__t_fact_online_order\n--  period=1440\n--  loadType=incremental\n--  logDrivenType=timewindow\n\n-- step=1\n-- source=postgres\n--  dbName=postgres\n--  tableName=sales.online_order\n-- target=hive\n--  dbName=ods\n--  tableName=t_fact_online_order\n-- writeMode=append\nSELECT "order_no" AS "order_no",\n       "user_id" AS "user_id",\n       "user_name" AS "user_name",\n       "order_total_amount" AS "order_total_amount",\n       "actual_amount" AS "actual_amount",\n       "post_amount" AS "post_amount",\n       "order_pay_amount" AS "order_pay_amount",\n       "total_discount" AS "total_discount",\n       "pay_type" AS "pay_type",\n       "source_type" AS "source_type",\n       "order_status" AS "order_status",\n       "note" AS "note",\n       "confirm_status" AS "confirm_status",\n       "payment_time" AS "payment_time",\n       "delivery_time" AS "delivery_time",\n       "receive_time" AS "receive_time",\n       "comment_time" AS "comment_time",\n       "delivery_company" AS "delivery_company",\n       "delivery_code" AS "delivery_code",\n       "business_date" AS "business_date",\n       "return_flag" AS "return_flag",\n       "created_at" AS "created_at",\n       "updated_at" AS "updated_at",\n       "deleted_at" AS "deleted_at",\n       ${JOB_ID} AS "job_id",\n       to_char("business_date", \'yyyy\') as "year",\n       to_char("business_date", \'MM\') as "month",\n       to_char("business_date", \'DD\') as "day"\nFROM "postgres"."sales"."online_order"\nWHERE "business_date" >= \'${DATA_RANGE_START}\' AND "business_date" < \'${DATA_RANGE_END}\';\n')),(0,n.kt)("h2",{id:"create-ods-table"},"Create ODS table"),(0,n.kt)(l.Z,{defaultValue:"sql",values:[{label:"SQL",value:"sql"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"sql",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"create schema ods;\ncreate table ods.t_fact_online_order\n(\n    order_no           varchar(64) not null,\n    user_id            varchar(32) not null,\n    user_name          varchar(32) not null,\n    order_total_amount numeric,\n    actual_amount      numeric,\n    post_amount        numeric,\n    order_pay_amount   numeric,\n    total_discount     numeric,\n    pay_type           varchar(32),\n    source_type        varchar(32),\n    order_status       varchar(32),\n    note               varchar(32),\n    confirm_status     varchar(32),\n    payment_time       timestamp,\n    delivery_time      timestamp,\n    receive_time       timestamp,\n    comment_time       timestamp,\n    delivery_company   varchar(32),\n    delivery_code      varchar(32),\n    business_date      date      default CURRENT_DATE,\n    return_flag        varchar(32),\n    created_at         timestamp default CURRENT_TIMESTAMP,\n    updated_at         timestamp default CURRENT_TIMESTAMP,\n    deleted_at         timestamp,\n    job_id             varchar(16)\n);\n")))),(0,n.kt)("h2",{id:"insert-data"},"Insert data"),(0,n.kt)(l.Z,{defaultValue:"sql",values:[{label:"SQL",value:"sql"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"sql",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"insert into sales.online_order(order_no, user_id, user_name, order_total_amount, actual_amount, post_amount,\n                                order_pay_amount,\n                                total_discount, pay_type, source_type, order_status, payment_time, business_date,\n                                created_at, updated_at, deleted_at)\nVALUES ('2021093000001', 1, '\u5f20\u4e09\xf0', 200.0, 100, 0, 99, 101.0, 'wechat', 'mini-program', 'paid', '2021-09-30 09:00:35',\n        '2021-09-30',\n        '2021-09-30 09:00:00', '2021-09-30 09:00:35', null),\n        ('2021093000002', 2, '\u674e\u56dbo(\u2565\ufe4f\u2565)o', 399.0, 200, 0, 200, 199.0, 'wechat', 'official-website', 'paid',\n        '2021-09-30 19:00:35',\n        '2021-09-30',\n        '2021-09-30 19:00:00', '2021-09-30 19:00:35', null);\n")))),(0,n.kt)("h2",{id:"before-run-job"},"Before run job"),(0,n.kt)("p",null,"The db connection infomation is specified in ",(0,n.kt)("inlineCode",{parentName:"p"},"application.properties")," and Make sure your db connections are included in the file.  For a quick start, we need to add followings:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"postgres.postgres.url=jdbc:postgresql://localhost:5432/postgres?stringtype=unspecified\npostgres.postgres.user=postgres\npostgres.postgres.password=postgres\npostgres.postgres.driver=org.postgresql.Driver\npostgres.postgres.fetchsize=10\n")),(0,n.kt)("h2",{id:"run-the-job"},"Run the job"),(0,n.kt)("p",null,"Then we will run a sample job which reads data from ",(0,n.kt)("inlineCode",{parentName:"p"},"sales.online_order")," table and write them into ",(0,n.kt)("inlineCode",{parentName:"p"},"ods.t_fact_online_order")),(0,n.kt)(l.Z,{defaultValue:"bash",values:[{label:"bash",value:"bash"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"bash",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'# run single job by `spark-submit`\nspark-submit --class com.github.sharpdata.sharpetl.spark.Entrypoint spark/build/libs/spark-1.0.0-SNAPSHOT.jar single-job --name=sales.online_order --period=1440 --default-start-time="2021-09-30 00:00:00" --local --once\n\n# run single job locally\n./gradlew :spark:run --args="single-job --name=sales.online_order --period=1440 --default-start-time=\'2021-09-30 00:00:00\' --local --once"\n')),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"You need to put sql file under ",(0,n.kt)("inlineCode",{parentName:"p"},"spark/src/main/resources/tasks")," or put it into HDFS/DBFS to run ",(0,n.kt)("inlineCode",{parentName:"p"},"single-job"),"\nIf you want to configure the sql file folder, please set ",(0,n.kt)("inlineCode",{parentName:"p"},"etl.workflow.path")," in ",(0,n.kt)("inlineCode",{parentName:"p"},"application.properties"))))),(0,n.kt)("h2",{id:"query-job-result"},"Query job result"),(0,n.kt)(l.Z,{defaultValue:"sql",values:[{label:"SQL",value:"sql"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"sql",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM ods.t_fact_online_order;\n")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"order_no"),(0,n.kt)("th",{parentName:"tr",align:"left"},"user_id"),(0,n.kt)("th",{parentName:"tr",align:"left"},"user_name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"order_total_amount"),(0,n.kt)("th",{parentName:"tr",align:"left"},"actual_amount"),(0,n.kt)("th",{parentName:"tr",align:"left"},"post_amount"),(0,n.kt)("th",{parentName:"tr",align:"left"},"order_pay_amount"),(0,n.kt)("th",{parentName:"tr",align:"left"},"total_discount"),(0,n.kt)("th",{parentName:"tr",align:"left"},"pay_type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"source_type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"order_status"),(0,n.kt)("th",{parentName:"tr",align:"left"},"note"),(0,n.kt)("th",{parentName:"tr",align:"left"},"confirm_status"),(0,n.kt)("th",{parentName:"tr",align:"left"},"payment_time"),(0,n.kt)("th",{parentName:"tr",align:"left"},"delivery_time"),(0,n.kt)("th",{parentName:"tr",align:"left"},"receive_time"),(0,n.kt)("th",{parentName:"tr",align:"left"},"comment_time"),(0,n.kt)("th",{parentName:"tr",align:"left"},"delivery_company"),(0,n.kt)("th",{parentName:"tr",align:"left"},"delivery_code"),(0,n.kt)("th",{parentName:"tr",align:"left"},"business_date"),(0,n.kt)("th",{parentName:"tr",align:"left"},"return_flag"),(0,n.kt)("th",{parentName:"tr",align:"left"},"created_at"),(0,n.kt)("th",{parentName:"tr",align:"left"},"updated_at"),(0,n.kt)("th",{parentName:"tr",align:"left"},"deleted_at"),(0,n.kt)("th",{parentName:"tr",align:"left"},"job_id"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2021093000002"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"\u674e\u56dbo(\u2565\ufe4f\u2565)o"),(0,n.kt)("td",{parentName:"tr",align:"left"},"399"),(0,n.kt)("td",{parentName:"tr",align:"left"},"200"),(0,n.kt)("td",{parentName:"tr",align:"left"},"0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"200"),(0,n.kt)("td",{parentName:"tr",align:"left"},"199"),(0,n.kt)("td",{parentName:"tr",align:"left"},"wechat"),(0,n.kt)("td",{parentName:"tr",align:"left"},"official-website"),(0,n.kt)("td",{parentName:"tr",align:"left"},"paid"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-09-30 19:00:35.000000"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-09-30"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-09-30 19:00:00.000000"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-09-30 19:00:35.000000"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2021093000001"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"\u5f20\u4e09\xf0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"200"),(0,n.kt)("td",{parentName:"tr",align:"left"},"100"),(0,n.kt)("td",{parentName:"tr",align:"left"},"0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"99"),(0,n.kt)("td",{parentName:"tr",align:"left"},"101"),(0,n.kt)("td",{parentName:"tr",align:"left"},"wechat"),(0,n.kt)("td",{parentName:"tr",align:"left"},"mini-program"),(0,n.kt)("td",{parentName:"tr",align:"left"},"paid"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-09-30 09:00:35.000000"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-09-30"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-09-30 09:00:00.000000"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-09-30 09:00:35.000000"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"})))))))}c.isMDXComponent=!0}}]);