"use strict";(self.webpackChunksharp_etl_site=self.webpackChunksharp_etl_site||[]).push([[622],{3905:(t,e,a)=>{a.d(e,{Zo:()=>_,kt:()=>c});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=n.createContext({}),m=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},_=function(t){var e=m(t.components);return n.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,_=d(t,["components","mdxType","originalType","parentName"]),f=m(a),c=r,g=f["".concat(s,".").concat(c)]||f[c]||p[c]||l;return a?n.createElement(g,i(i({ref:e},_),{},{components:a})):n.createElement(g,i({ref:e},_))}));function c(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=f;var d={};for(var s in e)hasOwnProperty.call(e,s)&&(d[s]=e[s]);d.originalType=t,d.mdxType="string"==typeof t?t:r,i[1]=d;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},8215:(t,e,a)=>{a.d(e,{Z:()=>r});var n=a(7294);function r(t){let{children:e,hidden:a,className:r}=t;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},e)}},9877:(t,e,a)=>{a.d(e,{Z:()=>_});var n=a(7462),r=a(7294),l=a(2389),i=a(650),d=a(6010);const s="tabItem_LplD";function m(t){var e,a,l;const{lazy:m,block:_,defaultValue:p,values:f,groupId:c,className:g}=t,N=r.Children.map(t.children,(t=>{if((0,r.isValidElement)(t)&&void 0!==t.props.value)return t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof t.type?t.type:t.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),o=null!=f?f:N.map((t=>{let{props:{value:e,label:a,attributes:n}}=t;return{value:e,label:a,attributes:n}})),k=(0,i.lx)(o,((t,e)=>t.value===e.value));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((t=>t.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const u=null===p?p:null!=(e=null!=p?p:null==(a=N.find((t=>t.props.default)))?void 0:a.props.value)?e:null==(l=N[0])?void 0:l.props.value;if(null!==u&&!o.some((t=>t.value===u)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+u+'" but none of its children has the corresponding value. Available values are: '+o.map((t=>t.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:b,setTabGroupChoices:h}=(0,i.UB)(),[w,y]=(0,r.useState)(u),T=[],{blockElementScrollPositionUntilNextRender:v}=(0,i.o5)();if(null!=c){const t=b[c];null!=t&&t!==w&&o.some((e=>e.value===t))&&y(t)}const E=t=>{const e=t.currentTarget,a=T.indexOf(e),n=o[a].value;n!==w&&(v(e),y(n),null!=c&&h(c,n))},R=t=>{var e;let a=null;switch(t.key){case"ArrowRight":{const e=T.indexOf(t.currentTarget)+1;a=T[e]||T[0];break}case"ArrowLeft":{const e=T.indexOf(t.currentTarget)-1;a=T[e]||T[T.length-1];break}}null==(e=a)||e.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":_},g)},o.map((t=>{let{value:e,label:a,attributes:l}=t;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===e?0:-1,"aria-selected":w===e,key:e,ref:t=>T.push(t),onKeyDown:R,onFocus:E,onClick:E},l,{className:(0,d.Z)("tabs__item",s,null==l?void 0:l.className,{"tabs__item--active":w===e})}),null!=a?a:e)}))),m?(0,r.cloneElement)(N.filter((t=>t.props.value===w))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},N.map(((t,e)=>(0,r.cloneElement)(t,{key:e,hidden:t.props.value!==w})))))}function _(t){const e=(0,l.Z)();return r.createElement(m,(0,n.Z)({key:String(e)},t))}},5466:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>_,contentTitle:()=>s,default:()=>c,frontMatter:()=>d,metadata:()=>m,toc:()=>p});var n=a(7462),r=(a(7294),a(3905)),l=a(9877),i=a(8215);const d={title:"Excel template for ods to dwd",sidebar_position:4,toc:!0,last_modified_at:new Date("2021-10-21T14:59:57.000Z")},s=void 0,m={unversionedId:"excel-template-dwd",id:"excel-template-dwd",title:"Excel template for ods to dwd",description:"pre-requirements",source:"@site/docs/excel-template-dwd.md",sourceDirName:".",slug:"/excel-template-dwd",permalink:"/SharpETL/docs/next/excel-template-dwd",editUrl:"https://github.com/SharpData/SharpETL/edit/asf-site/website/docs/docs/excel-template-dwd.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Excel template for ods to dwd",sidebar_position:4,toc:!0,last_modified_at:"2021-10-21T14:59:57.000Z"},sidebar:"docs",previous:{title:"Excel template for source to ods",permalink:"/SharpETL/docs/next/excel-template-ods"},next:{title:"single-job-guide",permalink:"/SharpETL/docs/next/single-job-guide"}},_={},p=[{value:"pre-requirements",id:"pre-requirements",level:2},{value:"Case 1",id:"case-1",level:2},{value:"Case 2",id:"case-2",level:2},{value:"Case 3",id:"case-3",level:2},{value:"Case 4",id:"case-4",level:2},{value:"Case 5",id:"case-5",level:2},{value:"Case 6",id:"case-6",level:2},{value:"Case 7",id:"case-7",level:2},{value:"Case 8",id:"case-8",level:2}],f={toc:p};function c(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"pre-requirements"},"pre-requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"all table(fact & dim) must exist before running ETL jobs(ETL doesn't create table)"),(0,r.kt)("li",{parentName:"ul"},"you can download ",(0,r.kt)("a",{parentName:"li",href:"https://docs.google.com/spreadsheets/d/1Prw1LFfkSkaAuf1K6O0TTI5PPRP7lLtzIR63x9HCSVw/edit#gid=1642393109"},"this excel")," to your ",(0,r.kt)("inlineCode",{parentName:"li"},"~/Desktop")," for the quick start guide.")),(0,r.kt)("h2",{id:"case-1"},"Case 1"),(0,r.kt)("p",null,"Just copy all data from ods to dwd, not joining with other tables and no quality check."),(0,r.kt)(l.Z,{defaultValue:"markdown",values:[{label:"Excel",value:"markdown"},{label:"SQL",value:"sql"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"markdown",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"source_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"source_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"incremental_type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Target column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"id_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"quality_check_rules"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"zip_dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"partition_column"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_cust"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t_fact_test_cust"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_cust"),(0,r.kt)("td",{parentName:"tr",align:"left"},"code"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t_fact_test_cust"),(0,r.kt)("td",{parentName:"tr",align:"left"},"code"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_cust"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t_fact_test_cust"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}))))),(0,r.kt)(i.Z,{value:"sql",mdxType:"TabItem"},(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You need to rename the sheet name of Case1 to ",(0,r.kt)("inlineCode",{parentName:"p"},"Fact")," to ensure the above command to execute successfully."))),(0,r.kt)("p",null,"When generating dimension-split table, the corresponding command line is as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'./gradlew clean :spark:run --args="generate-fact-sql -f ~/Desktop/\u6570\u636e\u5b57\u5178-\u6a21\u7248.xlsx --output ~/Desktop/"\n')),(0,r.kt)("p",null,"The sql file corresponding to Case1 then will be generated on your desktop named ",(0,r.kt)("inlineCode",{parentName:"p"},"dwd_t_fact_test_cust.sql"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- step=1\n-- source=temp\n-- target=variables\n-- checkPoint=false\n-- dateRangeInterval=0\nselect from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'yyyyMMdd')               as `DATE_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'HH')                     as `HOUR_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_START}', 'yyyy-MM-dd HH:mm:ss'), 'yyyy-MM-dd HH:mm:ss')  as `EFFECTIVE_START_TIME`;\n\n-- stepId=2\n-- source=hive\n--  dbName=usecase_ods\n--  tableName=test_cust\n--  options\n--   idColumn=id\n-- target=temp\n--  tableName=`1d764347`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `id` as `id`,\n       `code` as `code`,\n       `bz_time` as `bz_time`,\n       '${EFFECTIVE_START_TIME}' as effective_start_time,\n       '9999-01-01 00:00:00'     as effective_end_time,\n       '1'                       as is_active,\n       '1'                       as is_latest,\n       '${DATA_RANGE_START}'     as idempotent_key,\n       '${DATE_END}'             as dw_insert_date\nfrom `usecase_ods`.`test_cust`;\n\n-- stepId=3\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=t_fact_test_cust\n-- target=temp\n--  tableName=`0e5a2f6c`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`t_fact_test_cust` `t_fact_test_cust`\nwhere `dw_insert_date` = (select max(`dw_insert_date`)\n                          from `usecase_dwd`.`t_fact_test_cust` `t_fact_test_cust`);\n\n-- stepId=4\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=bz_time\n--   odsViewName=`1d764347`\n--   dwViewName=`0e5a2f6c`\n--   primaryFields=id\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=t_fact_test_cust\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n")))),(0,r.kt)("h2",{id:"case-2"},"Case 2"),(0,r.kt)("p",null,"The Case2 is generated by the new Excel: the dim table is firstly imported, then is the fact table.\nThe fact table joining with the dim table on the basis that the dim table is already existing and completed."),(0,r.kt)(l.Z,{defaultValue:"markdown",values:[{label:"Excel",value:"markdown"},{label:"SQL",value:"sql"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"markdown",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"source_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"source_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"incremental_type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Target column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"id_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"quality_check_rules"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"zip_dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"partition_column"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_split"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_split"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_split"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_split"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t_dim_user"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_split"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_split"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_name"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t_dim_user"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_name"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_split"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_account"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_split"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_account"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t_dim_user"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_account"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_split"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_split"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_user"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t_dim_user"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_user"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t_dim_user"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_name"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_user"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_account"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t_dim_user"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_account"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_user"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t_dim_user"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}))))),(0,r.kt)(i.Z,{value:"sql",mdxType:"TabItem"},(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You need to rename the sheet name of Case2 to ",(0,r.kt)("inlineCode",{parentName:"p"},"Fact")," to ensure the above command to execute successfully.\nThen there will be 2 sql files corresponding to Case2  generated on your desktop, the first one is named ",(0,r.kt)("inlineCode",{parentName:"p"},"dwd_t_dim_user.sql"),":"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- step=1\n-- source=temp\n-- target=variables\n-- checkPoint=false\n-- dateRangeInterval=0\nselect from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'yyyyMMdd')               as `DATE_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'HH')                     as `HOUR_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_START}', 'yyyy-MM-dd HH:mm:ss'), 'yyyy-MM-dd HH:mm:ss')  as `EFFECTIVE_START_TIME`;\n\n-- stepId=2\n-- source=hive\n--  dbName=usecase_ods\n--  tableName=test_user\n--  options\n--   idColumn=id\n-- target=temp\n--  tableName=`efa9e5ec`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `id` as `id`,\n       `user_name` as `user_name`,\n       `user_account` as `user_account`,\n       `bz_time` as `bz_time`,\n       '${EFFECTIVE_START_TIME}' as effective_start_time,\n       '9999-01-01 00:00:00'     as effective_end_time,\n       '1'                       as is_active,\n       '1'                       as is_latest,\n       '${DATA_RANGE_START}'     as idempotent_key,\n       '${DATE_END}'             as dw_insert_date\nfrom `usecase_ods`.`test_user`;\n\n-- stepId=3\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=t_dim_user\n-- target=temp\n--  tableName=`8c325c5e`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`t_dim_user` `t_dim_user`\nwhere `dw_insert_date` = (select max(`dw_insert_date`)\n                          from `usecase_dwd`.`t_dim_user` `t_dim_user`);\n\n-- stepId=4\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=bz_time\n--   odsViewName=`efa9e5ec`\n--   dwViewName=`8c325c5e`\n--   primaryFields=id\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=t_dim_user\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n")),(0,r.kt)("p",null,"The second one is named ",(0,r.kt)("inlineCode",{parentName:"p"},"dwd_test_fact_split.sql"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- step=1\n-- source=temp\n-- target=variables\n-- checkPoint=false\n-- dateRangeInterval=0\nselect from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'yyyyMMdd')               as `DATE_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'HH')                     as `HOUR_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_START}', 'yyyy-MM-dd HH:mm:ss'), 'yyyy-MM-dd HH:mm:ss')  as `EFFECTIVE_START_TIME`;\n\n-- stepId=2\n-- source=hive\n--  dbName=usecase_ods\n--  tableName=test_split\n--  options\n--   idColumn=id\n-- target=temp\n--  tableName=`9e69b8df`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `test_split`.`id` as `id`,\n       `test_split`.`bz_time` as `bz_time`,\n       ifnull(`t_dim_user`.`id`, '-1') as `user_id`,\n       '${EFFECTIVE_START_TIME}' as effective_start_time,\n       '9999-01-01 00:00:00'     as effective_end_time,\n       '1'                       as is_active,\n       '1'                       as is_latest,\n       '${DATA_RANGE_START}'     as idempotent_key,\n       '${DATE_END}'             as dw_insert_date\nfrom `usecase_ods`.`test_split` `test_split`\n         left join `usecase_dwd`.`t_dim_user` `t_dim_user`\n                   on `test_split`.`user_id` = `t_dim_user`.`id` and `t_dim_user`.is_latest = '1';\n\n-- stepId=3\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=test_fact_split\n-- target=temp\n--  tableName=`8efabcf7`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`test_fact_split` `test_fact_split`\nwhere `dw_insert_date` = (select max(`dw_insert_date`)\n                          from `usecase_dwd`.`test_fact_split` `test_fact_split`);\n\n-- stepId=4\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=bz_time\n--   odsViewName=`9e69b8df`\n--   dwViewName=`8efabcf7`\n--   primaryFields=id\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=test_fact_split\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n")))),(0,r.kt)("h2",{id:"case-3"},"Case 3"),(0,r.kt)("p",null,"Case 3 is generated by joining with the dim table which has the single primary key. "),(0,r.kt)(l.Z,{defaultValue:"markdown",values:[{label:"Excel",value:"markdown"},{label:"SQL",value:"sql"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"markdown",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"source_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"source_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"incremental_type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Target column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"id_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"quality_check_rules"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"zip_dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"partition_column"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"real_cust_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"real_cust_id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"null check, power null check"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_cust_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"real_cust_code"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"real_cust_code"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_cust_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"code"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"real_cust_bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"real_cust_bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_cust_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case_3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}))))),(0,r.kt)(i.Z,{value:"sql",mdxType:"TabItem"},(0,r.kt)("p",null,"After running the same command, the sql file named ",(0,r.kt)("inlineCode",{parentName:"p"},"default_test_fact_target.sql")," corresponding to Case3  will be generated:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- step=1\n-- source=temp\n-- target=variables\n-- checkPoint=false\n-- dateRangeInterval=0\nselect from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'yyyyMMdd')               as `DATE_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'HH')                     as `HOUR_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_START}', 'yyyy-MM-dd HH:mm:ss'), 'yyyy-MM-dd HH:mm:ss')  as `EFFECTIVE_START_TIME`;\n\n-- stepId=2\n-- source=hive\n--  dbName=usecase_ods\n--  tableName=test_fact_case_3\n--  options\n--   idColumn=id\n--   column.real_cust_id.qualityCheckRules=null check, power null check\n-- target=temp\n--  tableName=`a8cc8c22`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect *\nfrom `usecase_ods`.`test_fact_case_3`;\n\n-- stepId=3\n-- source=temp\n-- target=temp\n--  tableName=`ce47db66`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nwith join_fact_temp as (select nullif(`test_fact_case_3`.`real_cust_id`, `test_cust_case_3`.`id`) as `real_cust_id`,\n                               nullif(`test_fact_case_3`.`real_cust_code`, `test_cust_case_3`.`code`) as `real_cust_code`,\n                               nullif(`test_fact_case_3`.`real_cust_bz_time`, `test_cust_case_3`.`bz_time`) as `real_cust_bz_time`\n                        from `a8cc8c22` `test_fact_case_3`\n                                 left join `usecase_dwd`.`test_cust_case_3` `test_cust_case_3`\n                                           on `test_fact_case_3`.`real_cust_id` = `test_cust_case_3`.`id`\n                                               and `test_cust_case_3`.`is_latest` = '1'),\n     distinct_dim_temp as (select `real_cust_id`,\n                                  `real_cust_code`,\n                                  `real_cust_bz_time`\n                           from join_fact_temp\n                           where 1 = 1\n                             and (`real_cust_id` is not null)\n                           group by `real_cust_id`, `real_cust_code`, `real_cust_bz_time`\n    grouping sets (\n    ( `real_cust_id`, `real_cust_code`, `real_cust_bz_time`)\n    ))\nselect `real_cust_id` as `real_cust_id`,\n       first_value(`real_cust_code`) as `real_cust_code`,\n       first_value(`real_cust_bz_time`) as `real_cust_bz_time`,\n       count(1) as `distinct_count_num`\nfrom distinct_dim_temp\ngroup by `real_cust_id`\n    grouping sets (\n    ( `real_cust_id`)\n    )\nhaving 1 = 1\n   and (`real_cust_id` is not null);\n\n-- stepId=4\n-- source=temp\n-- target=temp\n--  tableName=test_cust_case_3__f1e256b9\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `real_cust_id` as `id`,\n       `real_cust_code` as `code`,\n       `real_cust_bz_time` as `bz_time`,\n       '1'                       as `is_auto_create`,\n       '${EFFECTIVE_START_TIME}' as `effective_start_time`,\n       '9999-01-01 00:00:00'     as `effective_end_time`,\n       '1'                       as `is_active`,\n       '1'                       as `is_latest`,\n       '${DATA_RANGE_START}'     as `idempotent_key`,\n       '${DATE_END}'             as `dw_insert_date`\nfrom `ce47db66` `ce47db66`\nwhere 1 = 1\n  and (`real_cust_id` is not null)\n  and `distinct_count_num` = 1;\n\n-- stepId=5\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=test_cust_case_3\n-- target=temp\n--  tableName=`8b936862`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`test_cust_case_3`;\n\n-- stepId=6\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=bz_time\n--   odsViewName=test_cust_case_3__f1e256b9\n--   dwViewName=`8b936862`\n--   primaryFields=id\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=test_cust_case_3\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n\n-- stepId=7\n-- source=temp\n-- target=temp\n--  tableName=test_fact_target_case_3__6637c70e\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nwith duplicate_dimension_temp as (\n    select *\n    from `ce47db66` `ce47db66`\n    where 1 = 1\n      and `distinct_count_num` > 1\n)\nselect `test_fact_case_3`.`id` as `id`,\n       `test_fact_case_3`.`bz_time` as `bz_time`,\n       (case\n            when `duplicate_dimension_temp_0`.`real_cust_id` is not null\n                then '-99'\n            else IFNULL(`test_cust_case_3`.`id`, '-1')\n           end) as `real_cust_id`,\n       '${EFFECTIVE_START_TIME}' as effective_start_time,\n       '9999-01-01 00:00:00'     as effective_end_time,\n       '1'                       as is_active,\n       '1'                       as is_latest,\n       '${DATA_RANGE_START}'     as idempotent_key,\n       '${DATE_END}'             as dw_insert_date\nfrom `a8cc8c22` `test_fact_case_3`\n         left join `usecase_dwd`.`test_cust_case_3` `test_cust_case_3`\n                   on `test_fact_case_3`.`real_cust_id` = `test_cust_case_3`.`id` and `test_cust_case_3`.is_latest = '1'\n         left join `duplicate_dimension_temp` `duplicate_dimension_temp_0`\n                   on `test_fact_case_3`.`real_cust_id` = `duplicate_dimension_temp_0`.`real_cust_id`;\n\n-- stepId=8\n-- source=temp\n-- target=variables\n-- checkPoint=false\n-- dateRangeInterval=0\nselect '' as `DW_PARTITION_CLAUSE`;\n\n-- stepId=9\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=test_fact_target_case_3\n-- target=temp\n--  tableName=`1a280f2f`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`test_fact_target_case_3` `test_fact_target_case_3`\n    ${DW_PARTITION_CLAUSE};\n\n-- step=10\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=bz_time\n--   odsViewName=test_fact_target_case_3__6637c70e\n--   dwViewName=`1a280f2f`\n--   primaryFields=id\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=test_fact_target_case_3\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n")))),(0,r.kt)("h2",{id:"case-4"},"Case 4"),(0,r.kt)("p",null,"In Case4, these 2 columns: area_code and area_name, are composite keys, to generate a new primary key (area_id) for the dim table."),(0,r.kt)(l.Z,{defaultValue:"markdown",values:[{label:"Excel",value:"markdown"},{label:"SQL",value:"sql"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"markdown",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"source_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"source_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Source column name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"incremental_type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Target column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"id_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"quality_check_rules"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"zip_dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"partition_column"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"uesecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"uesecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_area"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"uesecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_code"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_code"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_area"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_cd"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"uesecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_name"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_area"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_nm"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"uesecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_area"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"uesecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_auto_dim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}))))),(0,r.kt)(i.Z,{value:"sql",mdxType:"TabItem"},(0,r.kt)("p",null,"After running the same command, the sql file corresponding to Case4 named ",(0,r.kt)("inlineCode",{parentName:"p"},"default_test_fact_target.sql")," will be generated on your desktop:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- step=1\n-- source=temp\n-- target=variables\n-- checkPoint=false\n-- dateRangeInterval=0\nselect from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'yyyyMMdd')               as `DATE_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'HH')                     as `HOUR_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_START}', 'yyyy-MM-dd HH:mm:ss'), 'yyyy-MM-dd HH:mm:ss')  as `EFFECTIVE_START_TIME`;\n\n-- stepId=2\n-- source=hive\n--  dbName=usecase_ods\n--  tableName=test_fact_auto_dim\n--  options\n--   idColumn=id\n-- target=temp\n--  tableName=`634737e2`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect *\nfrom `usecase_ods`.`test_fact_auto_dim`;\n\n-- stepId=3\n-- source=temp\n-- target=temp\n--  tableName=`cb939fe5`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nwith join_fact_temp as (select nullif(`test_fact_auto_dim`.`area_code`, `test_area`.`area_cd`) as `area_code`,\n                               nullif(`test_fact_auto_dim`.`area_name`, `test_area`.`area_nm`) as `area_name`,\n                               nullif(`test_fact_auto_dim`.`area_bz_time`, `test_area`.`bz_time`) as `area_bz_time`\n                        from `634737e2` `test_fact_auto_dim`\n                                 left join `usecase_dwd`.`test_area` `test_area`\n                                           on `test_fact_auto_dim`.`area_code` = `test_area`.`area_cd`\n                                               and `test_fact_auto_dim`.`area_name` = `test_area`.`area_nm`\n                                               and `test_area`.`is_latest` = '1'),\n     distinct_dim_temp as (select `area_code`,\n                                  `area_name`,\n                                  `area_bz_time`\n                           from join_fact_temp\n                           where 1 = 1\n                             and (`area_code` is not null and `area_name` is not null)\n                           group by `area_code`, `area_name`, `area_bz_time`\n    grouping sets (\n    ( `area_code`, `area_name`, `area_bz_time`)\n    ))\nselect `area_code` as `area_code`,\n       `area_name` as `area_name`,\n       first_value(`area_bz_time`) as `area_bz_time`,\n       count(1) as `distinct_count_num`\nfrom distinct_dim_temp\ngroup by `area_code`, `area_name`\n    grouping sets (\n    ( `area_code`, `area_name`)\n    )\nhaving 1 = 1\n   and (`area_code` is not null and `area_name` is not null);\n\n-- stepId=4\n-- source=temp\n-- target=temp\n--  tableName=test_area__f5045d67\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect uuid() as `id`,\n       `area_code` as `area_cd`,\n       `area_name` as `area_nm`,\n       `area_bz_time` as `bz_time`,\n       '1'                       as `is_auto_create`,\n       '${EFFECTIVE_START_TIME}' as `effective_start_time`,\n       '9999-01-01 00:00:00'     as `effective_end_time`,\n       '1'                       as `is_active`,\n       '1'                       as `is_latest`,\n       '${DATA_RANGE_START}'     as `idempotent_key`,\n       '${DATE_END}'             as `dw_insert_date`\nfrom `cb939fe5` `cb939fe5`\nwhere 1 = 1\n  and (`area_code` is not null       and\n       `area_name` is not null)\n  and `distinct_count_num` = 1;\n\n-- stepId=5\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=test_area\n-- target=temp\n--  tableName=`8878baea`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`test_area`\nwhere `dw_insert_date` = (select max(`dw_insert_date`)\n                          from `usecase_dwd`.`test_area`);\n\n-- stepId=6\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=bz_time\n--   odsViewName=test_area__f5045d67\n--   dwViewName=`8878baea`\n--   primaryFields=area_cd,area_nm\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=test_area\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n\n-- stepId=7\n-- source=temp\n-- target=temp\n--  tableName=test_fact_target_auto_dim__d3531bfc\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nwith duplicate_dimension_temp as (\n    select *\n    from `cb939fe5` `cb939fe5`\n    where 1 = 1\n      and `distinct_count_num` > 1\n)\nselect `test_fact_auto_dim`.`id` as `id`,\n       `test_fact_auto_dim`.`bz_time` as `bz_time`,\n       (case\n            when `duplicate_dimension_temp_0`.`area_code` is not null and `duplicate_dimension_temp_0`.`area_name` is not null\n                then '-99'\n            else IFNULL(`test_area`.`id`, '-1')\n           end) as ``,\n       '${EFFECTIVE_START_TIME}' as effective_start_time,\n       '9999-01-01 00:00:00'     as effective_end_time,\n       '1'                       as is_active,\n       '1'                       as is_latest,\n       '${DATA_RANGE_START}'     as idempotent_key,\n       '${DATE_END}'             as dw_insert_date\nfrom `634737e2` `test_fact_auto_dim`\n         left join `usecase_dwd`.`test_area` `test_area`\n                   on `test_fact_auto_dim`.`area_code` = `test_area`.`area_cd`\n                       and `test_fact_auto_dim`.`area_name` = `test_area`.`area_nm` and `test_area`.is_latest = '1'\n         left join `duplicate_dimension_temp` `duplicate_dimension_temp_0`\n                   on `test_fact_auto_dim`.`area_code` = `duplicate_dimension_temp_0`.`area_code`\n                       and `test_fact_auto_dim`.`area_name` = `duplicate_dimension_temp_0`.`area_name`;\n\n-- stepId=8\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=test_fact_target_auto_dim\n-- target=temp\n--  tableName=`a3652e87`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`test_fact_target_auto_dim` `test_fact_target_auto_dim`\nwhere `dw_insert_date` = (select max(`dw_insert_date`)\n                          from `usecase_dwd`.`test_fact_target_auto_dim` `test_fact_target_auto_dim`);\n\n-- stepId=9\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=bz_time\n--   odsViewName=`634737e2`\n--   dwViewName=`a3652e87`\n--   primaryFields=id\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=test_fact_target_auto_dim\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n\n")))),(0,r.kt)("h2",{id:"case-5"},"Case 5"),(0,r.kt)("p",null,"if origin data has no id column"),(0,r.kt)("p",null,"not supported for now."),(0,r.kt)("h2",{id:"case-6"},"Case 6"),(0,r.kt)("p",null,"In Case 6, the origin data has no business time column."),(0,r.kt)(l.Z,{defaultValue:"markdown",values:[{label:"Excel",value:"markdown"},{label:"SQL",value:"sql"},{label:"ODS SQL",value:"ods"},{label:"DWD SQL",value:"dwd"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"markdown",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"source_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"source_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"incremental_type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"expression"),(0,r.kt)("th",{parentName:"tr",align:"left"},"sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"id_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"quality_check_rules"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"zip_dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"partition_column"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case_6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case_6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case_6"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case_6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_area_case_6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case_6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_code"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case_6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_code"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_area_case_6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_cd"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case_6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case_6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_name"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_area_case_6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"area_nm"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}))))),(0,r.kt)(i.Z,{value:"sql",mdxType:"TabItem"},(0,r.kt)("p",null,"After running the same command, the sql file ",(0,r.kt)("inlineCode",{parentName:"p"},"default_test_fact_target.sql")," will be generated:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- step=1\n-- source=temp\n-- target=variables\n-- checkPoint=false\n-- dateRangeInterval=0\nselect from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'yyyyMMdd')               as `DATE_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'HH')                     as `HOUR_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_START}', 'yyyy-MM-dd HH:mm:ss'), 'yyyy-MM-dd HH:mm:ss')  as `EFFECTIVE_START_TIME`;\n\n-- stepId=2\n-- source=hive\n--  dbName=usecase_ods\n--  tableName=test_fact_case_6\n--  options\n--   idColumn=id\n-- target=temp\n--  tableName=`b53c9449`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect *\nfrom `usecase_ods`.`test_fact_case_6`;\n\n-- stepId=3\n-- source=temp\n-- target=temp\n--  tableName=`6954aac5`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nwith join_fact_temp as (select nullif(`test_fact_case_6`.`area_id`, `test_area_case_6`.`id`) as `area_id`,\n                               nullif(`test_fact_case_6`.`area_code`, `test_area_case_6`.`area_cd`) as `area_code`,\n                               nullif(`test_fact_case_6`.`area_name`, `test_area_case_6`.`area_nm`) as `area_name`\n                        from `b53c9449` `test_fact_case_6`\n                                 left join `usecase_dwd`.`test_area_case_6` `test_area_case_6`\n                                           on `test_fact_case_6`.`area_id` = `test_area_case_6`.`id`\n                                               and `test_area_case_6`.`is_latest` = '1'),\n     distinct_dim_temp as (select `area_id`,\n                                  `area_code`,\n                                  `area_name`\n                           from join_fact_temp\n                           where 1 = 1\n                             and (`area_id` is not null)\n                           group by `area_id`, `area_code`, `area_name`\n    grouping sets (\n    ( `area_id`, `area_code`, `area_name`)\n    ))\nselect `area_id` as `area_id`,\n       first_value(`area_code`) as `area_code`,\n       first_value(`area_name`) as `area_name`,\n       count(1) as `distinct_count_num`\nfrom distinct_dim_temp\ngroup by `area_id`\n    grouping sets (\n    ( `area_id`)\n    )\nhaving 1 = 1\n   and (`area_id` is not null);\n\n-- stepId=4\n-- source=temp\n-- target=temp\n--  tableName=test_area_case_6__ebc46690\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `area_id` as `id`,\n       `area_code` as `area_cd`,\n       `area_name` as `area_nm`,\n       '1'                       as `is_auto_create`,\n       '${EFFECTIVE_START_TIME}' as `effective_start_time`,\n       '9999-01-01 00:00:00'     as `effective_end_time`,\n       '1'                       as `is_active`,\n       '1'                       as `is_latest`,\n       '${DATA_RANGE_START}'     as `idempotent_key`,\n       '${DATE_END}'             as `dw_insert_date`\nfrom `6954aac5` `6954aac5`\nwhere 1 = 1\n  and (`area_id` is not null)\n  and `distinct_count_num` = 1;\n\n-- stepId=5\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=test_area_case_6\n-- target=temp\n--  tableName=`1c7bcb60`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`test_area_case_6`;\n\n-- stepId=6\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=id\n--   odsViewName=test_area_case_6__ebc46690\n--   dwViewName=`1c7bcb60`\n--   primaryFields=id\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=test_area_case_6\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n\n-- stepId=7\n-- source=temp\n-- target=temp\n--  tableName=test_fact_target_case_6__e9ae24c3\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nwith duplicate_dimension_temp as (\n    select *\n    from `6954aac5` `6954aac5`\n    where 1 = 1\n      and `distinct_count_num` > 1\n)\nselect `test_fact_case_6`.`id` as `id`,\n       (case\n            when `duplicate_dimension_temp_0`.`area_id` is not null\n                then '-99'\n            else IFNULL(`test_area_case_6`.`id`, '-1')\n           end) as `area_id`,\n       '${EFFECTIVE_START_TIME}' as effective_start_time,\n       '9999-01-01 00:00:00'     as effective_end_time,\n       '1'                       as is_active,\n       '1'                       as is_latest,\n       '${DATA_RANGE_START}'     as idempotent_key,\n       '${DATE_END}'             as dw_insert_date\nfrom `b53c9449` `test_fact_case_6`\n         left join `usecase_dwd`.`test_area_case_6` `test_area_case_6`\n                   on `test_fact_case_6`.`area_id` = `test_area_case_6`.`id` and `test_area_case_6`.is_latest = '1'\n         left join `duplicate_dimension_temp` `duplicate_dimension_temp_0`\n                   on `test_fact_case_6`.`area_id` = `duplicate_dimension_temp_0`.`area_id`;\n\n-- stepId=8\n-- source=temp\n-- target=variables\n-- checkPoint=false\n-- dateRangeInterval=0\nselect '' as `DW_PARTITION_CLAUSE`;\n\n-- stepId=9\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=test_fact_target_case_6\n-- target=temp\n--  tableName=`775d93f3`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`test_fact_target_case_6` `test_fact_target_case_6`\n    ${DW_PARTITION_CLAUSE};\n\n-- step=10\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=id\n--   odsViewName=test_fact_target_case_6__e9ae24c3\n--   dwViewName=`775d93f3`\n--   primaryFields=id\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=test_fact_target_case_6\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n"))),(0,r.kt)(i.Z,{value:"ods",mdxType:"TabItem"},"Script for creating ODS tables:",(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"create table usecase_ods.test_fact\n(\n    id          varchar(255),\n    area_code   varchar(255),    \n    area_name   varchar(255),    \n    job_time    timestamp\n)\n")),(0,r.kt)("p",null,"Insert data to ODS: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"insert into usecase_ods.test_fact values(1, '123', 'area-123', '2020-01-01 15:05:05');\ninsert into usecase_ods.test_fact values(2, '456', 'area-456', '2020-11-01 15:05:05');\n"))),(0,r.kt)(i.Z,{value:"dwd",mdxType:"TabItem"},"Script for creating DWD tables.",(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"create table usecase_dwd.test_fact_target\n(\n    id                      varchar(255),\n    area_id                 varchar(255),    \n    job_time                timestamp,\n    is_auto_create          varchar(255),\n    effective_start_time    timestamp,\n    effective_end_time      timestamp,\n    is_active               varchar(255),\n    is_latest               varchar(255),\n    idempotent_key          varchar(255),\n    dw_insert_date          varchar(255)\n);\n\ncreate table usecase_dwd.test_area\n(\n    id          varchar(255),\n    area_cd     varchar(255),    \n    area_nm     varchar(255),    \n    bz_time     timestamp,\n    is_auto_create          varchar(255),\n    effective_start_time    timestamp,\n    effective_end_time      timestamp,\n    is_active               varchar(255),\n    is_latest               varchar(255),\n    idempotent_key          varchar(255),\n    dw_insert_date          varchar(255)\n);\n\n")))),(0,r.kt)("h2",{id:"case-7"},"Case 7"),(0,r.kt)("p",null,"if origin system do HARD delete"),(0,r.kt)("p",null,"incremental_type = incremental_diff"),(0,r.kt)("h2",{id:"case-8"},"Case 8"),(0,r.kt)("p",null,"In Case8, the auto-created dim table combine from multiple fact table"),(0,r.kt)(l.Z,{defaultValue:"markdown",values:[{label:"Excel",value:"markdown"},{label:"SQL",value:"sql"},{label:"ODS SQL",value:"ods"},{label:"DWD SQL",value:"dwd"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"markdown",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"source_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"source_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"incremental_type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"target_column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"expression"),(0,r.kt)("th",{parentName:"tr",align:"left"},"sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"id_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"quality_check_rules"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_sort_column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim"),(0,r.kt)("th",{parentName:"tr",align:"left"},"auto_create_dim_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_db_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_table_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"dim_column_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"zip_dim_key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"partition_column"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_code"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_code"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_cd"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_name"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_nm"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_fact_target_case8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact_target"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact_target"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_count"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact_target"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_count"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_ct"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact_target"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_address"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_address"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact_target"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_store_fact_target"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region_source"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region_source"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_cd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_cd"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region_source"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_nm"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_nm"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region_source"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_ct"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_ct"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region_source"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"region_address"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region_source"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bz_time"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_ods"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region_source"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"incremental_append"),(0,r.kt)("td",{parentName:"tr",align:"left"},"usecase_dwd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"test_region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"is_auto_create"),(0,r.kt)("td",{parentName:"tr",align:"left"},"'0'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}))))),(0,r.kt)(i.Z,{value:"sql",mdxType:"TabItem"},(0,r.kt)("p",null,"There will be 3 sql files generated on your desktop, named ",(0,r.kt)("inlineCode",{parentName:"p"},"usecase_dwd_test_region.sql"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"usecase_dwd_test_fact_target_case8.sql")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"usecase_dwd_test_store_fact_target.sql"),", respectively."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"usecase_dwd_test_region.sql"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- step=1\n-- source=temp\n-- target=variables\n-- checkPoint=false\n-- dateRangeInterval=0\nselect from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'yyyyMMdd')               as `DATE_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'HH')                     as `HOUR_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_START}', 'yyyy-MM-dd HH:mm:ss'), 'yyyy-MM-dd HH:mm:ss')  as `EFFECTIVE_START_TIME`;\n\n-- stepId=2\n-- source=hive\n--  dbName=usecase_ods\n--  tableName=test_region_source\n--  options\n--   idColumn=id\n-- target=temp\n--  tableName=`b84d02c6`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `id` as `id`,\n       `region_cd` as `region_cd`,\n       `region_nm` as `region_nm`,\n       `region_ct` as `region_ct`,\n       `region_address` as `region_address`,\n       `bz_time` as `bz_time`,\n       '0' as `is_auto_create`,\n       '${EFFECTIVE_START_TIME}' as effective_start_time,\n       '9999-01-01 00:00:00'     as effective_end_time,\n       '1'                       as is_active,\n       '1'                       as is_latest,\n       '${DATA_RANGE_START}'     as idempotent_key,\n       '${DATE_END}'             as dw_insert_date\nfrom `usecase_ods`.`test_region_source`;\n\n-- stepId=3\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=test_region\n-- target=temp\n--  tableName=`eac5375c`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`test_region` `test_region`\nwhere `dw_insert_date` = (select max(`dw_insert_date`)\n                          from `usecase_dwd`.`test_region` `test_region`);\n\n-- stepId=4\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=bz_time\n--   odsViewName=`b84d02c6`\n--   dwViewName=`eac5375c`\n--   primaryFields=id\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=test_region\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"usecase_dwd_test_fact_target_case8.sql"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- step=1\n-- source=temp\n-- target=variables\n-- checkPoint=false\n-- dateRangeInterval=0\nselect from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'yyyyMMdd')               as `DATE_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'HH')                     as `HOUR_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_START}', 'yyyy-MM-dd HH:mm:ss'), 'yyyy-MM-dd HH:mm:ss')  as `EFFECTIVE_START_TIME`;\n\n-- stepId=2\n-- source=hive\n--  dbName=usecase_ods\n--  tableName=test_fact_case8\n--  options\n--   idColumn=id\n-- target=temp\n--  tableName=`c7a033fe`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `test_fact_case8`.`id` as `id`,\n       `test_fact_case8`.`bz_time` as `bz_time`,\n       ifnull(`test_region`.`id`, '-1') as `region_id`,\n       '${EFFECTIVE_START_TIME}' as effective_start_time,\n       '9999-01-01 00:00:00'     as effective_end_time,\n       '1'                       as is_active,\n       '1'                       as is_latest,\n       '${DATA_RANGE_START}'     as idempotent_key,\n       '${DATE_END}'             as dw_insert_date\nfrom `usecase_ods`.`test_fact_case8` `test_fact_case8`\n         left join `usecase_dwd`.`test_region` `test_region`\n                   on `test_fact_case8`.`region_id` = `test_region`.`id` and `test_region`.is_latest = '1';\n\n-- stepId=3\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=test_fact_target_case8\n-- target=temp\n--  tableName=`b99ce421`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`test_fact_target_case8` `test_fact_target_case8`\nwhere `dw_insert_date` = (select max(`dw_insert_date`)\n                          from `usecase_dwd`.`test_fact_target_case8` `test_fact_target_case8`);\n\n-- stepId=4\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=bz_time\n--   odsViewName=`c7a033fe`\n--   dwViewName=`b99ce421`\n--   primaryFields=id\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=test_fact_target_case8\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"usecase_dwd_test_store_fact_target.sql"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- step=1\n-- source=temp\n-- target=variables\n-- checkPoint=false\n-- dateRangeInterval=0\nselect from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'yyyyMMdd')               as `DATE_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_END}', 'yyyy-MM-dd HH:mm:ss'), 'HH')                     as `HOUR_END`,\n       from_unixtime(unix_timestamp('${DATA_RANGE_START}', 'yyyy-MM-dd HH:mm:ss'), 'yyyy-MM-dd HH:mm:ss')  as `EFFECTIVE_START_TIME`;\n\n-- stepId=2\n-- source=hive\n--  dbName=usecase_ods\n--  tableName=test_store_fact\n--  options\n--   idColumn=id\n-- target=temp\n--  tableName=`ee9d6f1e`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `test_store_fact`.`id` as `id`,\n       `test_store_fact`.`bz_time` as `bz_time`,\n       ifnull(`test_region`.`id`, '-1') as `region_id`,\n       '${EFFECTIVE_START_TIME}' as effective_start_time,\n       '9999-01-01 00:00:00'     as effective_end_time,\n       '1'                       as is_active,\n       '1'                       as is_latest,\n       '${DATA_RANGE_START}'     as idempotent_key,\n       '${DATE_END}'             as dw_insert_date\nfrom `usecase_ods`.`test_store_fact` `test_store_fact`\n         left join `usecase_dwd`.`test_region` `test_region`\n                   on `test_store_fact`.`region_id` = `test_region`.`id` and `test_region`.is_latest = '1';\n\n-- stepId=3\n-- source=hive\n--  dbName=usecase_dwd\n--  tableName=test_store_fact_target\n-- target=temp\n--  tableName=`ff1acfcc`\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=append\nselect `(dw_insert_date)?+.+`,\n       '${DATE_END}' as `dw_insert_date`\nfrom `usecase_dwd`.`test_store_fact_target` `test_store_fact_target`\nwhere `dw_insert_date` = (select max(`dw_insert_date`)\n                          from `usecase_dwd`.`test_store_fact_target` `test_store_fact_target`);\n\n-- stepId=4\n-- source=transformation\n--  className=com.github.sharpdata.sharpetl.spark.transformation.ZipTableTransformer\n--  methodName=transform\n--   dwDataLoadType=incremental\n--   sortFields=bz_time\n--   odsViewName=`ee9d6f1e`\n--   dwViewName=`ff1acfcc`\n--   primaryFields=id\n--  transformerType=object\n-- target=hive\n--  dbName=usecase_dwd\n--  tableName=test_store_fact_target\n-- checkPoint=false\n-- dateRangeInterval=0\n-- writeMode=overwrite\n\n\n"))),(0,r.kt)(i.Z,{value:"ods",mdxType:"TabItem"},"Script for creating ODS tables:",(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"create table usecase_ods.test_fact_case8\n(\n    id              varchar(255),\n    region_id       varchar(255),\n    region_code       varchar(255),    \n    region_name       varchar(255), \n    region_bz_time    timestamp,\n    bz_time         timestamp,\n        job_id          varchar(255),\n    job_time        timestamp\n);\n\ncreate table usecase_ods.test_store_fact\n(\n    id              varchar(255),\n    region_id       varchar(255),\n    region_count      varchar(255),    \n    region_address    varchar(255), \n    region_bz_time    timestamp,\n    bz_time         timestamp,\n    job_id          varchar(255),\n    job_time        timestamp\n);\n\ncreate table usecase_ods.test_region_source\n(\n    id              varchar(255),\n    region_cd         varchar(255),    \n    region_nm         varchar(255), \n    region_ct         int,\n    region_address    varchar(255),\n    bz_time         timestamp,\n    job_id          varchar(255),\n    job_time        timestamp\n);\n")),(0,r.kt)("p",null,"Insert data to ODS: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"insert into usecase_ods.test_fact_case8 values(1, '1', '123', 'region-123',  '2020-01-01 15:05:05', '2020-01-01 15:05:05', '1', '2020-01-01 15:05:05');\ninsert into usecase_ods.test_fact_case8 values(2, '2', '456', 'region-456',  '2020-11-01 15:05:05', '2020-11-01 15:05:05', '2', '2020-11-01 15:05:05');\n\ninsert into usecase_ods.test_store_fact values(1, '1', 123, 'address-123', '2020-01-01 15:05:05', '2020-01-01 15:05:05', '1', '2020-01-01 15:05:05');\ninsert into usecase_ods.test_store_fact values(2, '2', 456, 'address-456', '2020-11-01 15:05:05', '2020-11-01 15:05:05', '2', '2020-11-01 15:05:05');\n\ninsert into usecase_ods.test_region_source values(1, '123', 'region-123', 123, 'address-123', '2020-01-01 15:05:05', '1', '2020-01-01 15:05:05');\ninsert into usecase_ods.test_region_source values(2, '456', 'region-456', 456, 'address-456', '2020-11-01 15:05:05', '2', '2020-11-01 15:05:05');\n"))),(0,r.kt)(i.Z,{value:"dwd",mdxType:"TabItem"},"Script for creating DWD tables.",(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"create table usecase_dwd.test_fact_target_case8\n(\n    id                      varchar(255),\n    region_id                 varchar(255),    \n    bz_time                 timestamp,\n    job_time                timestamp,\n    effective_start_time    timestamp,\n    effective_end_time      timestamp,\n    is_active               varchar(255),\n    is_latest               varchar(255),\n    idempotent_key          varchar(255),\n    dw_insert_date          varchar(255)\n);\n\ncreate table usecase_dwd.test_store_fact_target\n(\n    id               varchar(255), \n    region_id        varchar(255),                 \n    bz_time          timestamp,\n        job_time                timestamp,\n    effective_start_time    timestamp,\n    effective_end_time      timestamp,\n    is_active               varchar(255),\n    is_latest               varchar(255),\n    idempotent_key          varchar(255),\n    dw_insert_date          varchar(255)\n);\n\ncreate table usecase_dwd.test_region\n(\n    id                      varchar(255),\n    region_cd                 varchar(255),    \n    region_nm                 varchar(255),    \n    region_ct                 int,\n    region_address            varchar(255),\n    bz_time                 timestamp,\n    job_time                timestamp,\n    is_auto_create          varchar(255),\n    effective_start_time    timestamp,\n    effective_end_time      timestamp,\n    is_active               varchar(255),\n    is_latest               varchar(255),\n    idempotent_key          varchar(255),\n    dw_insert_date          varchar(255)\n);\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Please Note: field ",(0,r.kt)("inlineCode",{parentName:"p"},"is_auto_create")," is required for ",(0,r.kt)("strong",{parentName:"p"},"Dim")," table. It is used to mark whether this is from source data or generated by ETL framework.")))))}c.isMDXComponent=!0}}]);